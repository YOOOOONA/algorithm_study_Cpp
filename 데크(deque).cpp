벡터와 데크 모두 비슷한 인터페이스를 제공하고 있지만, 내부적으로는 다르게 처리된다. 
벡터의 경우 capacity 가 꽉 찼을 경우 새롭게 크게 한 덩어리의 메모리를 할당하게 되지만, 
데크의 경우메모리 상에서 잘게 쪼개어서 보관하게 된다. 물론, 데크 객체 자체에서 메모리에 쪼개져서 보관되는 덩어리들의 
위치를 기억하고, 각각의 원소에 대해 접근할 수 있는 인터페이스를 제공해준다. 

따라서 데크는 내부적으로 벡터에 비해 조금 더 복잡하게 구현되어 있지만 그 덕분에 
벡터와는 달리 메모리 공간을 효율적으로 사용할 수 있게 된다. 
뿐만 아니라 엄청나게 큰 데이터의 경우, 데크는 벡터와는 다르게 많은 양의 메모리 재할당을 하지 않기 때문에 좀더 빠름  

참고로 벡터와는 다르게 capacity 와 reserve 가 없다!